% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/select.R
\name{sdf_select}
\alias{sdf_select}
\alias{sdf_select_}
\title{Select nested items}
\usage{
sdf_select(x, ..., aliases)

sdf_select_(x, ..., .dots, aliases)
}
\arguments{
\item{x}{An object (usually a \code{spark_tbl}) coercable to a Spark DataFrame.}

\item{...}{Fields to select}

\item{aliases}{Character. Optional. If provided these names will be matched positionally with
select fields provided in \code{...}. This is more useful when calling from a function and
less natural to use when calling the function directly. The alternative with direct calls
is to put the alias on the left side of the expression (e.g. \code{sdf_select(df, fld_alias=parent.child.fld)})}

\item{.dots}{List. Treated just like \code{...} except that the named arguments are in a list}
}
\description{
The \code{select} function works well for keeping/dropping top level fields. It does not
however support access to nested data. This function will accept complex field names
such as \code{x.y.z} where \code{z} is a field nested within \code{y} which is in turn
nested within \code{x}. Since R uses "$" to access nested elements and java/scala use ".",
\code{sdf_select(data, x.y.z)} and \code{sdf_select(data, x$y$z)} are equivalent.
}
